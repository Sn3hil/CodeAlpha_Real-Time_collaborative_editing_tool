{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Kshiyo\\\\InternShip Projects\\\\collab\\\\collaborative-editor\\\\frontend\\\\src\\\\components\\\\DocumentEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport '../App.css'; // Correct import for App.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction DocumentEditor() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [typingUsers, setTypingUsers] = useState([]);\n  useEffect(() => {\n    socket.on(\"document\", newContent => {\n      setContent(newContent);\n    });\n    socket.on(\"typing\", typingUser => {\n      setTypingUsers(prev => [...prev, typingUser]);\n    });\n    return () => {\n      socket.off(\"document\");\n      socket.off(\"typing\");\n    };\n  }, []);\n  const handleChange = event => {\n    setContent(event.target.value);\n    socket.emit(\"document\", event.target.value);\n    socket.emit(\"typing\", username); // Notify others that the user is typing\n  };\n  const handleUsernameChange = () => {\n    const enteredUsername = prompt(\"Enter your username\");\n    if (enteredUsername) {\n      setUsername(enteredUsername);\n    }\n  };\n  useEffect(() => {\n    // Ensure users' typing status is cleared after a short time\n    const timer = setTimeout(() => {\n      setTypingUsers([]);\n    }, 1000); // Reset typing users after 1 second of inactivity\n\n    return () => clearTimeout(timer);\n  }, [typingUsers]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"editor\",\n      value: content,\n      onChange: handleChange,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `typing-indicator ${typingUsers.length > 0 ? \"show\" : \"\"}`,\n      children: typingUsers.length > 1 ? `${typingUsers.join(\", \")} are typing...` : `${typingUsers[0]} is typing...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentEditor, \"vWI3/m7qsNE8CPupHtX7ojvNHqs=\");\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","DocumentEditor","_s","content","setContent","username","setUsername","typingUsers","setTypingUsers","on","newContent","typingUser","prev","off","handleChange","event","target","value","emit","handleUsernameChange","enteredUsername","prompt","timer","setTimeout","clearTimeout","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","join","_c","$RefreshReg$"],"sources":["D:/Other/Kshiyo/InternShip Projects/collab/collaborative-editor/frontend/src/components/DocumentEditor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';  // Correct import for App.css\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction DocumentEditor() {\r\n  const [content, setContent] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"document\", (newContent) => {\r\n      setContent(newContent);\r\n    });\r\n\r\n    socket.on(\"typing\", (typingUser) => {\r\n      setTypingUsers((prev) => [...prev, typingUser]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"document\");\r\n      socket.off(\"typing\");\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n    socket.emit(\"document\", event.target.value);\r\n    socket.emit(\"typing\", username);  // Notify others that the user is typing\r\n  };\r\n\r\n  const handleUsernameChange = () => {\r\n    const enteredUsername = prompt(\"Enter your username\");\r\n    if (enteredUsername) {\r\n      setUsername(enteredUsername);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Ensure users' typing status is cleared after a short time\r\n    const timer = setTimeout(() => {\r\n      setTypingUsers([]);\r\n    }, 1000); // Reset typing users after 1 second of inactivity\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [typingUsers]);\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <textarea\r\n        className=\"editor\"\r\n        value={content}\r\n        onChange={handleChange}\r\n        placeholder=\"Start typing...\"\r\n      ></textarea>\r\n      {/* Typing indicator */}\r\n      <div\r\n        className={`typing-indicator ${typingUsers.length > 0 ? \"show\" : \"\"}`}\r\n      >\r\n        {typingUsers.length > 1\r\n          ? `${typingUsers.join(\", \")} are typing...`\r\n          : `${typingUsers[0]} is typing...`}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}