{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Kshiyo\\\\InternShip Projects\\\\collab\\\\collaborative-editor\\\\frontend\\\\src\\\\components\\\\DocumentEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport '../App.css'; // Correct import for App.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction DocumentEditor() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [typingUsers, setTypingUsers] = useState([]);\n  const editorRef = useRef(null); // Ref to the editor textarea\n\n  useEffect(() => {\n    socket.on(\"document\", newContent => {\n      setContent(newContent);\n    });\n    socket.on(\"typing\", typingUser => {\n      setTypingUsers(prev => [...prev, typingUser]);\n    });\n    return () => {\n      socket.off(\"document\");\n      socket.off(\"typing\");\n    };\n  }, []);\n  const handleChange = event => {\n    setContent(event.target.value);\n    socket.emit(\"document\", event.target.value);\n    socket.emit(\"typing\", username); // Notify others that the user is typing\n  };\n  const handleUsernameChange = () => {\n    const enteredUsername = prompt(\"Enter your username\");\n    if (enteredUsername) {\n      setUsername(enteredUsername);\n    }\n  };\n  useEffect(() => {\n    // Ensure users' typing status is cleared after a short time\n    const timer = setTimeout(() => {\n      setTypingUsers([]);\n    }, 1000); // Reset typing users after 1 second of inactivity\n\n    return () => clearTimeout(timer);\n  }, [typingUsers]);\n\n  // Function to calculate cursor position\n  const calculateCursorPosition = () => {\n    const editor = editorRef.current;\n    const cursorPos = editor.selectionStart; // Get cursor position\n    const lineHeight = 24; // Assuming a fixed line height for now\n\n    // Calculate the cursor position dynamically\n    const cursorRow = Math.floor(cursorPos / editor.cols);\n    const cursorColumn = cursorPos % editor.cols;\n\n    // Calculate position relative to the editor container\n    const cursorTop = cursorRow * lineHeight;\n    const cursorLeft = cursorColumn * 10; // Adjust depending on font size\n\n    return {\n      top: cursorTop,\n      left: cursorLeft\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      ref: editorRef,\n      className: \"editor\",\n      value: content,\n      onChange: handleChange,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator\",\n      style: typingUsers.length > 0 ? calculateCursorPosition() : {\n        visibility: \"hidden\"\n      },\n      children: typingUsers.length > 1 ? `${typingUsers.join(\", \")} are typing...` : `${typingUsers[0]} is typing...`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentEditor, \"2PLOPFdfIyQQXlMThFlPqQvxasU=\");\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","DocumentEditor","_s","content","setContent","username","setUsername","typingUsers","setTypingUsers","editorRef","on","newContent","typingUser","prev","off","handleChange","event","target","value","emit","handleUsernameChange","enteredUsername","prompt","timer","setTimeout","clearTimeout","calculateCursorPosition","editor","current","cursorPos","selectionStart","lineHeight","cursorRow","Math","floor","cols","cursorColumn","cursorTop","cursorLeft","top","left","className","style","position","children","ref","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","visibility","join","_c","$RefreshReg$"],"sources":["D:/Other/Kshiyo/InternShip Projects/collab/collaborative-editor/frontend/src/components/DocumentEditor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport io from \"socket.io-client\";\r\nimport '../App.css';  // Correct import for App.css\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction DocumentEditor() {\r\n  const [content, setContent] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const editorRef = useRef(null);  // Ref to the editor textarea\r\n\r\n  useEffect(() => {\r\n    socket.on(\"document\", (newContent) => {\r\n      setContent(newContent);\r\n    });\r\n\r\n    socket.on(\"typing\", (typingUser) => {\r\n      setTypingUsers((prev) => [...prev, typingUser]);\r\n    });\r\n\r\n    return () => {\r\n      socket.off(\"document\");\r\n      socket.off(\"typing\");\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n    socket.emit(\"document\", event.target.value);\r\n    socket.emit(\"typing\", username);  // Notify others that the user is typing\r\n  };\r\n\r\n  const handleUsernameChange = () => {\r\n    const enteredUsername = prompt(\"Enter your username\");\r\n    if (enteredUsername) {\r\n      setUsername(enteredUsername);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Ensure users' typing status is cleared after a short time\r\n    const timer = setTimeout(() => {\r\n      setTypingUsers([]);\r\n    }, 1000); // Reset typing users after 1 second of inactivity\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [typingUsers]);\r\n\r\n  // Function to calculate cursor position\r\n  const calculateCursorPosition = () => {\r\n    const editor = editorRef.current;\r\n    const cursorPos = editor.selectionStart;  // Get cursor position\r\n    const lineHeight = 24;  // Assuming a fixed line height for now\r\n\r\n    // Calculate the cursor position dynamically\r\n    const cursorRow = Math.floor(cursorPos / editor.cols);\r\n    const cursorColumn = cursorPos % editor.cols;\r\n\r\n    // Calculate position relative to the editor container\r\n    const cursorTop = cursorRow * lineHeight;\r\n    const cursorLeft = cursorColumn * 10;  // Adjust depending on font size\r\n\r\n    return { top: cursorTop, left: cursorLeft };\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-container\" style={{ position: \"relative\" }}>\r\n      <textarea\r\n        ref={editorRef}\r\n        className=\"editor\"\r\n        value={content}\r\n        onChange={handleChange}\r\n        placeholder=\"Start typing...\"\r\n      ></textarea>\r\n      {/* Typing indicator */}\r\n      <div\r\n        className=\"typing-indicator\"\r\n        style={typingUsers.length > 0 ? calculateCursorPosition() : { visibility: \"hidden\" }}\r\n      >\r\n        {typingUsers.length > 1\r\n          ? `${typingUsers.join(\", \")} are typing...`\r\n          : `${typingUsers[0]} is typing...`}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}