{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Kshiyo\\\\InternShip Projects\\\\collab\\\\collaborative-editor\\\\frontend\\\\src\\\\components\\\\DocumentEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction DocumentEditor() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [username, setUsername] = useState(null); // Store the username\n  const [typingUsers, setTypingUsers] = useState([]);\n  useEffect(() => {\n    // Ask user for a username when they first visit (only if it's not set yet)\n    if (!username) {\n      const user = prompt(\"Enter your username:\");\n      if (user) {\n        setUsername(user);\n        socket.emit(\"set-username\", user);\n      }\n    }\n    socket.on(\"document\", newContent => {\n      setContent(newContent);\n    });\n    socket.on(\"typing-users\", users => {\n      setTypingUsers(users);\n    });\n    return () => {\n      // Cleanup socket listeners on unmount\n      socket.off(\"document\");\n      socket.off(\"typing-users\");\n    };\n  }, [username]); // The effect runs only when `username` changes\n\n  const handleChange = event => {\n    setContent(event.target.value);\n    socket.emit(\"document\", event.target.value);\n    socket.emit(\"typing\");\n\n    // Stop typing after 2 seconds of inactivity\n    clearTimeout(window.typingTimeout);\n    window.typingTimeout = setTimeout(() => {\n      socket.emit(\"stop-typing\");\n    }, 2000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"editor\",\n      value: content,\n      onChange: handleChange,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator-container\",\n      children: typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: typingUsers.includes(username) ? `${username} is typing...` : typingUsers.join(\", \") + \" are typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentEditor, \"flKHrIrSdF4IEJVrVfUlB+4vZ1U=\");\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","DocumentEditor","_s","content","setContent","username","setUsername","typingUsers","setTypingUsers","user","prompt","emit","on","newContent","users","off","handleChange","event","target","value","clearTimeout","window","typingTimeout","setTimeout","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","length","includes","join","_c","$RefreshReg$"],"sources":["D:/Other/Kshiyo/InternShip Projects/collab/collaborative-editor/frontend/src/components/DocumentEditor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction DocumentEditor() {\r\n  const [content, setContent] = useState(\"\");\r\n  const [username, setUsername] = useState(null); // Store the username\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  \r\n  useEffect(() => {\r\n    // Ask user for a username when they first visit (only if it's not set yet)\r\n    if (!username) {\r\n      const user = prompt(\"Enter your username:\");\r\n      if (user) {\r\n        setUsername(user);\r\n        socket.emit(\"set-username\", user);\r\n      }\r\n    }\r\n\r\n    socket.on(\"document\", (newContent) => {\r\n      setContent(newContent);\r\n    });\r\n\r\n    socket.on(\"typing-users\", (users) => {\r\n      setTypingUsers(users);\r\n    });\r\n\r\n    return () => {\r\n      // Cleanup socket listeners on unmount\r\n      socket.off(\"document\");\r\n      socket.off(\"typing-users\");\r\n    };\r\n  }, [username]);  // The effect runs only when `username` changes\r\n\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n    socket.emit(\"document\", event.target.value);\r\n    socket.emit(\"typing\");\r\n\r\n    // Stop typing after 2 seconds of inactivity\r\n    clearTimeout(window.typingTimeout);\r\n    window.typingTimeout = setTimeout(() => {\r\n      socket.emit(\"stop-typing\");\r\n    }, 2000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <textarea\r\n        className=\"editor\"\r\n        value={content}\r\n        onChange={handleChange}\r\n        placeholder=\"Start typing...\"\r\n      ></textarea>\r\n\r\n      {/* Typing indicator at the bottom of the editor */}\r\n      <div className=\"typing-indicator-container\">\r\n        {typingUsers.length > 0 && (\r\n          <div className=\"typing-indicator\">\r\n            {typingUsers.includes(username)\r\n              ? `${username} is typing...`\r\n              : typingUsers.join(\", \") + \" are typing...\"}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}