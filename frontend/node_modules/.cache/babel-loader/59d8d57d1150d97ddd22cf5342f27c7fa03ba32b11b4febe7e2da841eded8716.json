{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Kshiyo\\\\InternShip Projects\\\\collab\\\\collaborative-editor\\\\frontend\\\\src\\\\components\\\\DocumentEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction DocumentEditor() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [users, setUsers] = useState([]); // Track connected users\n  const [userName, setUserName] = useState(\"\"); // Optional: Name for the user\n\n  // This is a simple way to generate a unique name for each user\n  useEffect(() => {\n    setUserName(\"User\" + Math.floor(Math.random() * 1000)); // Random username\n  }, []);\n  useEffect(() => {\n    socket.on(\"document\", newContent => {\n      setContent(newContent);\n    });\n\n    // Listen for user presence updates\n    socket.on(\"users\", userList => {\n      setUsers(userList);\n    });\n  }, []);\n  const handleChange = event => {\n    setContent(event.target.value);\n    socket.emit(\"document\", event.target.value);\n  };\n  useEffect(() => {\n    // Emit user presence on connect\n    socket.emit(\"userJoin\", userName);\n    return () => {\n      // Optionally: Emit user leave when the component unmounts\n      socket.emit(\"disconnect\");\n    };\n  }, [userName]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"editor\",\n      value: content,\n      onChange: handleChange,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Users Online:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: users.map((user, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: user.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) // Display user ids or names\n        )\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentEditor, \"eZOliS64AVCsBokNKHiQBZBO3bQ=\");\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","DocumentEditor","_s","content","setContent","users","setUsers","userName","setUserName","Math","floor","random","on","newContent","userList","handleChange","event","target","value","emit","className","children","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","user","index","id","_c","$RefreshReg$"],"sources":["D:/Other/Kshiyo/InternShip Projects/collab/collaborative-editor/frontend/src/components/DocumentEditor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction DocumentEditor() {\r\n  const [content, setContent] = useState(\"\");\r\n  const [users, setUsers] = useState([]); // Track connected users\r\n  const [userName, setUserName] = useState(\"\"); // Optional: Name for the user\r\n\r\n  // This is a simple way to generate a unique name for each user\r\n  useEffect(() => {\r\n    setUserName(\"User\" + Math.floor(Math.random() * 1000)); // Random username\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"document\", (newContent) => {\r\n      setContent(newContent);\r\n    });\r\n\r\n    // Listen for user presence updates\r\n    socket.on(\"users\", (userList) => {\r\n      setUsers(userList);\r\n    });\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n    socket.emit(\"document\", event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Emit user presence on connect\r\n    socket.emit(\"userJoin\", userName);\r\n\r\n    return () => {\r\n      // Optionally: Emit user leave when the component unmounts\r\n      socket.emit(\"disconnect\");\r\n    };\r\n  }, [userName]);\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <textarea\r\n        className=\"editor\"\r\n        value={content}\r\n        onChange={handleChange}\r\n        placeholder=\"Start typing...\"\r\n      ></textarea>\r\n      <div className=\"user-list\">\r\n        <h3>Users Online:</h3>\r\n        <ul>\r\n          {users.map((user, index) => (\r\n            <li key={index}>{user.id}</li> // Display user ids or names\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}