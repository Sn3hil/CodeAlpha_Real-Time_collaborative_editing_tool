{"ast":null,"code":"var _jsxFileName = \"D:\\\\Other\\\\Kshiyo\\\\InternShip Projects\\\\collab\\\\collaborative-editor\\\\frontend\\\\src\\\\components\\\\DocumentEditor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction DocumentEditor() {\n  _s();\n  const [content, setContent] = useState(\"\");\n  const [username, setUsername] = useState(null); // Only allow setting username once\n  const [typingUsers, setTypingUsers] = useState([]);\n  const [cursorPosition, setCursorPosition] = useState({\n    x: 0,\n    y: 0\n  }); // Track cursor position\n\n  useEffect(() => {\n    // Ask user for a username when they first visit\n    if (!username) {\n      const user = prompt(\"Enter your username:\");\n      if (user) {\n        setUsername(user);\n        socket.emit(\"set-username\", user);\n      }\n    }\n    socket.on(\"document\", newContent => {\n      setContent(newContent);\n    });\n    socket.on(\"typing-users\", users => {\n      setTypingUsers(users);\n    });\n    return () => {\n      // Cleanup socket listeners on unmount\n      socket.off(\"document\");\n      socket.off(\"typing-users\");\n    };\n  }, [username]); // Run effect only when username is set\n\n  const handleChange = event => {\n    setContent(event.target.value);\n    socket.emit(\"document\", event.target.value);\n    socket.emit(\"typing\");\n\n    // Stop typing after 2 seconds of inactivity\n    clearTimeout(window.typingTimeout);\n    window.typingTimeout = setTimeout(() => {\n      socket.emit(\"stop-typing\");\n    }, 2000);\n  };\n  const handleCursorPosition = event => {\n    const textarea = event.target;\n    const position = textarea.selectionStart; // Get the cursor position (index)\n    const {\n      offsetLeft,\n      offsetTop,\n      scrollTop,\n      clientHeight\n    } = textarea;\n\n    // Calculate cursor position on the page\n    const lineHeight = parseInt(window.getComputedStyle(textarea).lineHeight);\n    const lineNumber = Math.floor(position / textarea.cols);\n    setCursorPosition({\n      x: offsetLeft + 10,\n      // 10px for padding\n      y: offsetTop + lineNumber * lineHeight - scrollTop + 5 // 5px offset for better placement\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      className: \"editor\",\n      value: content,\n      onChange: handleChange,\n      onSelect: handleCursorPosition,\n      placeholder: \"Start typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), typingUsers.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator\",\n      style: {\n        left: `${cursorPosition.x}px`,\n        top: `${cursorPosition.y + 20}px`,\n        // Position below the cursor\n        position: \"absolute\",\n        color: \"black\" // Set the color to black\n      },\n      children: typingUsers.includes(username) ? `${username} is typing...` : typingUsers.join(\", \") + \" are typing...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(DocumentEditor, \"Uz6NOo6zM2G6W/Ktwz6kvrU9g+c=\");\n_c = DocumentEditor;\nexport default DocumentEditor;\nvar _c;\n$RefreshReg$(_c, \"DocumentEditor\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","DocumentEditor","_s","content","setContent","username","setUsername","typingUsers","setTypingUsers","cursorPosition","setCursorPosition","x","y","user","prompt","emit","on","newContent","users","off","handleChange","event","target","value","clearTimeout","window","typingTimeout","setTimeout","handleCursorPosition","textarea","position","selectionStart","offsetLeft","offsetTop","scrollTop","clientHeight","lineHeight","parseInt","getComputedStyle","lineNumber","Math","floor","cols","className","children","onChange","onSelect","placeholder","fileName","_jsxFileName","columnNumber","length","style","left","top","color","includes","join","_c","$RefreshReg$"],"sources":["D:/Other/Kshiyo/InternShip Projects/collab/collaborative-editor/frontend/src/components/DocumentEditor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction DocumentEditor() {\r\n  const [content, setContent] = useState(\"\");\r\n  const [username, setUsername] = useState(null); // Only allow setting username once\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [cursorPosition, setCursorPosition] = useState({ x: 0, y: 0 });  // Track cursor position\r\n\r\n  useEffect(() => {\r\n    // Ask user for a username when they first visit\r\n    if (!username) {\r\n      const user = prompt(\"Enter your username:\");\r\n      if (user) {\r\n        setUsername(user);\r\n        socket.emit(\"set-username\", user);\r\n      }\r\n    }\r\n\r\n    socket.on(\"document\", (newContent) => {\r\n      setContent(newContent);\r\n    });\r\n\r\n    socket.on(\"typing-users\", (users) => {\r\n      setTypingUsers(users);\r\n    });\r\n\r\n    return () => {\r\n      // Cleanup socket listeners on unmount\r\n      socket.off(\"document\");\r\n      socket.off(\"typing-users\");\r\n    };\r\n  }, [username]);  // Run effect only when username is set\r\n\r\n  const handleChange = (event) => {\r\n    setContent(event.target.value);\r\n    socket.emit(\"document\", event.target.value);\r\n    socket.emit(\"typing\");\r\n\r\n    // Stop typing after 2 seconds of inactivity\r\n    clearTimeout(window.typingTimeout);\r\n    window.typingTimeout = setTimeout(() => {\r\n      socket.emit(\"stop-typing\");\r\n    }, 2000);\r\n  };\r\n\r\n  const handleCursorPosition = (event) => {\r\n    const textarea = event.target;\r\n    const position = textarea.selectionStart; // Get the cursor position (index)\r\n    const { offsetLeft, offsetTop, scrollTop, clientHeight } = textarea;\r\n\r\n    // Calculate cursor position on the page\r\n    const lineHeight = parseInt(window.getComputedStyle(textarea).lineHeight);\r\n    const lineNumber = Math.floor(position / textarea.cols);\r\n\r\n    setCursorPosition({\r\n      x: offsetLeft + 10, // 10px for padding\r\n      y: offsetTop + (lineNumber * lineHeight) - scrollTop + 5, // 5px offset for better placement\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"editor-container\">\r\n      <textarea\r\n        className=\"editor\"\r\n        value={content}\r\n        onChange={handleChange}\r\n        onSelect={handleCursorPosition}\r\n        placeholder=\"Start typing...\"\r\n      ></textarea>\r\n\r\n      {/* Display the current user typing below the cursor */}\r\n      {typingUsers.length > 0 && (\r\n        <div\r\n          className=\"typing-indicator\"\r\n          style={{\r\n            left: `${cursorPosition.x}px`,\r\n            top: `${cursorPosition.y + 20}px`, // Position below the cursor\r\n            position: \"absolute\",\r\n            color: \"black\", // Set the color to black\r\n          }}\r\n        >\r\n          {typingUsers.includes(username)\r\n            ? `${username} is typing...`\r\n            : typingUsers.join(\", \") + \" are typing...\"}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DocumentEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}